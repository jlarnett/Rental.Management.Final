@using System.Drawing
@model Rental.Management.Final.Views.RentalProperties.PropertyVm

@{
    ViewData["Title"] = "Details";
}

<h1>@Model.Address</h1>

<div>
    <hr />
    <div class="row mb-2">
        <dl class="col">
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Description)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Description)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Address)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Address)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.IsOccupied)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.IsOccupied)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Price)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Price)
            </dd>
        </dl>
        <div class="col">
            @if (Model.PropertyImages.Count > 0)
            {
                <div id="RentalPropertyCarousel" class="carousel slide">
                    <div class="carousel-indicators">

                        @for (int i = 0; i < Model.PropertyImages.Count; i++)
                        {
                            <button type="button" data-bs-target="#RentalPropertyCarousel" data-bs-slide-to="@i" class="active" aria-current="true" aria-label="Slide @i"></button>
                        }
                    </div>
                    <div class="carousel-inner">
                        @{
                            var firstImage = Model.PropertyImages.First();
                            var firstImageString = Convert.ToBase64String(firstImage);

                            <div class="carousel-item active item">
                                <img src="data:image/jpeg;base64, @firstImageString" class="d-block w-100" alt="Rental Property Image">
                            </div>

                            Model.PropertyImages.RemoveAt(0);

                            foreach (var image in Model.PropertyImages)
                            {
                                var imageString = Convert.ToBase64String(image);

                                <div class="carousel-item item">
                                    <img src="data:image/jpeg;base64, @imageString" class="d-block w-100" alt="Rental Property Image">
                                </div>
                            }
                        }
                    </div>
                    <button class="carousel-control-prev" type="button" data-bs-target="#RentalPropertyCarousel" data-bs-slide="prev">
                        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                        <span class="visually-hidden">Previous</span>
                    </button>
                    <button class="carousel-control-next" type="button" data-bs-target="#RentalPropertyCarousel" data-bs-slide="next">
                        <span class="carousel-control-next-icon" aria-hidden="true"></span>
                        <span class="visually-hidden">Next</span>
                    </button>
                </div>
            }
        </div>
    </div>
    @{
        if (!Model.IsOccupied)
        {
            <div class="row">
                <a class="btn btn-outline-warning" asp-controller="RentalContracts" asp-action="Create" asp-route-id="@Model.Id">Reserve Rental</a>
            </div>
        }
    }
</div>

<div>
    <a asp-action="Edit" asp-route-id="@Model?.Id">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>
